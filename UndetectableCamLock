getgenv().Prediction =  (  .18  )   -- [ PREDICTION: Lower Prediction: Lower Ping | Higher Prediction: Higher Ping  ]

getgenv().FOV =  (  350  )   -- [ FOV RADIUS: Increases Or Decreases FOV Radius ]

getgenv().AimKey =  (  "c"  )  -- [ TOGGLE KEY: Toggles Silent Aim On And Off ]

getgenv().DontShootThesePeople = {  -- [ WHITELIST: List Of Who NOT To Shoot, edit like this. "Contain quotations with their name and then a semi-colon afterwards for each line" ; ]

	"Player1";
	"Player2";

}

--[[
		Do Not Edit Anything Beyond This Point. 
]]

local MouseLocked = true
local LocalPlayer = game:GetService("Players").LocalPlayer
local Players = game:GetService("Players")
local Mouse = LocalPlayer:GetMouse()
local Camera = game:GetService("Workspace").CurrentCamera
local Folder1 = Instance.new("Folder", workspace)
local UserInputService = game:GetService("UserInputService")
local connections = getconnections(game:GetService("LogService").MessageOut)
for _, v in ipairs(connections) do
	v:Disable()
end

getconnections = getconnections
mousemoverel = mousemoverel
getgenv = getgenv
Drawing = Drawing

local FOV_CIRCLE = Drawing.new("Circle")
FOV_CIRCLE.Visible = true
FOV_CIRCLE.Filled = false
FOV_CIRCLE.Thickness = 1
FOV_CIRCLE.Transparency = .5
FOV_CIRCLE.Color = Color3.new(1, 0, 0)
FOV_CIRCLE.Radius = getgenv().FOV
FOV_CIRCLE.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

local Options = {
	Torso = "HumanoidRootPart";
	Head = "Head";
}

local function MoveFovCircle()
	pcall(function()
		local DoIt = true
		spawn(function()
			while DoIt do task.wait()
				FOV_CIRCLE.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
			end
		end)
	end)
end coroutine.wrap(MoveFovCircle)()

local function ClearFolder1()
	for _, v in pairs(Folder1:GetChildren()) do
		if v:IsA("Part") and v then
			v:Destroy()
			task.wait()
		end
	end
end

local function CameraNormalLock()
	if MouseLocked then
		local Target = nil
		local Distance = 9e9 task.wait()
		local Players = game:GetService("Players")
		local LocalPlayer = game:GetService("Players").LocalPlayer
		local Camera = game:GetService("Workspace").CurrentCamera
		for _, v in pairs(Players:GetPlayers()) do 
			if not table.find(getgenv().DontShootThesePeople, v.Name) then
				if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("Humanoid").Health > 0 then
					local Enemy = v.Character	
					local CastingFrom = CFrame.new(Camera.CFrame.Position, Enemy[Options.Torso].CFrame.Position) * CFrame.new(0, 0, -4)
					local RayCast = Ray.new(CastingFrom.Position, CastingFrom.LookVector * 9000)
					local World, ToSpace = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(RayCast, {LocalPlayer.Character:FindFirstChild("Head")})
					local RootWorld = (Enemy[Options.Torso].CFrame.Position - ToSpace).magnitude
					if RootWorld < 4 then		
						local RootPartPosition, Visible = Camera:WorldToViewportPoint(Enemy[Options.Torso].Position)
						if Visible then
							local Real_Magnitude = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(RootPartPosition.X, RootPartPosition.Y)).Magnitude
							if Real_Magnitude < Distance and Real_Magnitude < FOV_CIRCLE.Radius then
								Distance = Real_Magnitude
								Target = Enemy
							end
						end
					end
				end
			end
		end

		if not Folder1:FindFirstChildOfClass("Part") then
			local MouseToPart = Instance.new("Part", Folder1)
			MouseToPart.Name = "Part"
			MouseToPart.Anchored = true
			MouseToPart.CanCollide = false
			MouseToPart.CanTouch = false
			MouseToPart.Transparency = 1
			MouseToPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,.5,-50)

			if Target ~= nil and Target:FindFirstChild("HumanoidRootPart") and Target:FindFirstChild("Humanoid").Health > 0 then
				pcall(function()

					local GetPartAimingAt = Target:FindFirstChild("Head")
					while MouseLocked do task.wait()
						pcall(function()

							local Predicted_Position = GetPartAimingAt.Position + (GetPartAimingAt.AssemblyLinearVelocity * getgenv().Prediction + Vector3.new(0,-1,0))
							local GetPositionsFromVector3 = Camera:WorldToScreenPoint(Predicted_Position)
							MouseToPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,.2,-50)
							local GetFromPart2DForm = MouseToPart.Position

							mousemoverel(GetFromPart2DForm.X - Mouse.X, GetFromPart2DForm.Y - Mouse.Y)
							mousemoverel(GetPositionsFromVector3.X - Mouse.X, GetPositionsFromVector3.Y - Mouse.Y)
							mousemoverel(GetFromPart2DForm.X - Mouse.X, GetFromPart2DForm.Y - Mouse.Y)

						end)
					end
				end)
			end
		end
	end
end

Mouse.KeyDown:Connect(function(KeyPressed)
	if KeyPressed == (getgenv().AimKey:lower()) then
		if MouseLocked == false then
			MouseLocked = true
			CameraNormalLock()
		elseif MouseLocked == true then
			MouseLocked = false
			ClearFolder1()
		end
	end
end)
Mouse.KeyDown:Connect(function(Rejoin)
	if Rejoin == "=" then
		local LocalPlayer = game:GetService("Players").LocalPlayer
		game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
	end
end)

--Farewell Atman, Nosss, Toru.
